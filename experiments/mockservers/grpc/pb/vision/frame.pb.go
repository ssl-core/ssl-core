// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: protocols/vision/frame.proto

package vision

import (
	common "github.com/robocin/ssl-core/protocols/protocols/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Frame is the message sent by the vision service to the rest of the system.
type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The generation properties of the frame.
	Properties *Frame_Properties `protobuf:"bytes,1,opt,name=properties,proto3" json:"properties,omitempty"`
	// The list of detected balls, in order of confidence.
	Balls []*Ball `protobuf:"bytes,2,rep,name=balls,proto3" json:"balls,omitempty"`
	// The list of detected robots (both teams).
	Robots []*Robot `protobuf:"bytes,3,rep,name=robots,proto3" json:"robots,omitempty"`
	// The field information (sent periodically).
	Field *Field `protobuf:"bytes,4,opt,name=field,proto3,oneof" json:"field,omitempty"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_vision_frame_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_vision_frame_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_protocols_vision_frame_proto_rawDescGZIP(), []int{0}
}

func (x *Frame) GetProperties() *Frame_Properties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *Frame) GetBalls() []*Ball {
	if x != nil {
		return x.Balls
	}
	return nil
}

func (x *Frame) GetRobots() []*Robot {
	if x != nil {
		return x.Robots
	}
	return nil
}

func (x *Frame) GetField() *Field {
	if x != nil {
		return x.Field
	}
	return nil
}

// Ball is the message describing a game ball.
type Ball struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The confidence of the ball detection.
	Confidence float32 `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	// The 3D position of the ball in the field (in millimeters).
	Position *common.Point3Df `protobuf:"bytes,3,opt,name=position,proto3" json:"position,omitempty"`
	// The 3D velocity of the ball in the field (in millimeters per second).
	Velocity *common.Point3Df `protobuf:"bytes,4,opt,name=velocity,proto3" json:"velocity,omitempty"`
}

func (x *Ball) Reset() {
	*x = Ball{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_vision_frame_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ball) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ball) ProtoMessage() {}

func (x *Ball) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_vision_frame_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ball.ProtoReflect.Descriptor instead.
func (*Ball) Descriptor() ([]byte, []int) {
	return file_protocols_vision_frame_proto_rawDescGZIP(), []int{1}
}

func (x *Ball) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *Ball) GetPosition() *common.Point3Df {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Ball) GetVelocity() *common.Point3Df {
	if x != nil {
		return x.Velocity
	}
	return nil
}

// Robot is the message describing a game robot.
type Robot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The confidence of the robot detection.
	Confidence float32 `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	// The id of the robot.
	RobotId *common.RobotId `protobuf:"bytes,3,opt,name=robot_id,json=robotId,proto3" json:"robot_id,omitempty"`
	// The 2D position of the robot in the field (in millimeters).
	Position *common.Point2Df `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`
	// The angle pointing in the direction the robot is facing, i.e. the robot's orientation (in radians).
	Angle float32 `protobuf:"fixed32,5,opt,name=angle,proto3" json:"angle,omitempty"`
	// The 2D velocity of the robot in the field (in millimeters per second).
	Velocity *common.Point2Df `protobuf:"bytes,6,opt,name=velocity,proto3" json:"velocity,omitempty"`
	// The angular velocity of the robot (in radians per second).
	AngularVelocity float32 `protobuf:"fixed32,7,opt,name=angular_velocity,json=angularVelocity,proto3" json:"angular_velocity,omitempty"`
	// The physical attributes of the robot.
	PhysicalAttributes *Robot_PhysicalAttributes `protobuf:"bytes,9,opt,name=physical_attributes,json=physicalAttributes,proto3" json:"physical_attributes,omitempty"`
}

func (x *Robot) Reset() {
	*x = Robot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_vision_frame_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Robot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Robot) ProtoMessage() {}

func (x *Robot) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_vision_frame_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Robot.ProtoReflect.Descriptor instead.
func (*Robot) Descriptor() ([]byte, []int) {
	return file_protocols_vision_frame_proto_rawDescGZIP(), []int{2}
}

func (x *Robot) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *Robot) GetRobotId() *common.RobotId {
	if x != nil {
		return x.RobotId
	}
	return nil
}

func (x *Robot) GetPosition() *common.Point2Df {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Robot) GetAngle() float32 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *Robot) GetVelocity() *common.Point2Df {
	if x != nil {
		return x.Velocity
	}
	return nil
}

func (x *Robot) GetAngularVelocity() float32 {
	if x != nil {
		return x.AngularVelocity
	}
	return 0
}

func (x *Robot) GetPhysicalAttributes() *Robot_PhysicalAttributes {
	if x != nil {
		return x.PhysicalAttributes
	}
	return nil
}

// Field is the message describing the game field.
type Field struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The incremental unique id of the field.
	SerialId uint64 `protobuf:"varint,1,opt,name=serial_id,json=serialId,proto3" json:"serial_id,omitempty"`
	// The length of the field (in millimeters).
	Length float32 `protobuf:"fixed32,2,opt,name=length,proto3" json:"length,omitempty"`
	// The width of the field (in millimeters).
	Width float32 `protobuf:"fixed32,3,opt,name=width,proto3" json:"width,omitempty"`
	// The depth of the goal (in millimeters).
	GoalDepth float32 `protobuf:"fixed32,4,opt,name=goal_depth,json=goalDepth,proto3" json:"goal_depth,omitempty"`
	// The width of the goal (in millimeters).
	GoalWidth float32 `protobuf:"fixed32,5,opt,name=goal_width,json=goalWidth,proto3" json:"goal_width,omitempty"`
	// The depth of the penalty area (in millimeters).
	PenaltyAreaDepth float32 `protobuf:"fixed32,6,opt,name=penalty_area_depth,json=penaltyAreaDepth,proto3" json:"penalty_area_depth,omitempty"`
	// The width of the penalty area (in millimeters).
	PenaltyAreaWidth float32 `protobuf:"fixed32,7,opt,name=penalty_area_width,json=penaltyAreaWidth,proto3" json:"penalty_area_width,omitempty"`
	// The width of the boundary (in millimeters).
	BoundaryWidth float32 `protobuf:"fixed32,8,opt,name=boundary_width,json=boundaryWidth,proto3" json:"boundary_width,omitempty"`
	// The distance from the goal center to the penalty mark (in millimeters).
	GoalCenterToPenaltyMark float32 `protobuf:"fixed32,9,opt,name=goal_center_to_penalty_mark,json=goalCenterToPenaltyMark,proto3" json:"goal_center_to_penalty_mark,omitempty"`
}

func (x *Field) Reset() {
	*x = Field{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_vision_frame_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Field) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Field) ProtoMessage() {}

func (x *Field) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_vision_frame_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Field.ProtoReflect.Descriptor instead.
func (*Field) Descriptor() ([]byte, []int) {
	return file_protocols_vision_frame_proto_rawDescGZIP(), []int{3}
}

func (x *Field) GetSerialId() uint64 {
	if x != nil {
		return x.SerialId
	}
	return 0
}

func (x *Field) GetLength() float32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Field) GetWidth() float32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Field) GetGoalDepth() float32 {
	if x != nil {
		return x.GoalDepth
	}
	return 0
}

func (x *Field) GetGoalWidth() float32 {
	if x != nil {
		return x.GoalWidth
	}
	return 0
}

func (x *Field) GetPenaltyAreaDepth() float32 {
	if x != nil {
		return x.PenaltyAreaDepth
	}
	return 0
}

func (x *Field) GetPenaltyAreaWidth() float32 {
	if x != nil {
		return x.PenaltyAreaWidth
	}
	return 0
}

func (x *Field) GetBoundaryWidth() float32 {
	if x != nil {
		return x.BoundaryWidth
	}
	return 0
}

func (x *Field) GetGoalCenterToPenaltyMark() float32 {
	if x != nil {
		return x.GoalCenterToPenaltyMark
	}
	return 0
}

// Properties is the message describing the properties of the frame.
type Frame_Properties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The incremental unique id of the frame.
	SerialId uint64 `protobuf:"varint,1,opt,name=serial_id,json=serialId,proto3" json:"serial_id,omitempty"`
	// The unix timestamp of the frame creation.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The expected rate of frames generated.
	Fps float32 `protobuf:"fixed32,3,opt,name=fps,proto3" json:"fps,omitempty"`
}

func (x *Frame_Properties) Reset() {
	*x = Frame_Properties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_vision_frame_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame_Properties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame_Properties) ProtoMessage() {}

func (x *Frame_Properties) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_vision_frame_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame_Properties.ProtoReflect.Descriptor instead.
func (*Frame_Properties) Descriptor() ([]byte, []int) {
	return file_protocols_vision_frame_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Frame_Properties) GetSerialId() uint64 {
	if x != nil {
		return x.SerialId
	}
	return 0
}

func (x *Frame_Properties) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Frame_Properties) GetFps() float32 {
	if x != nil {
		return x.Fps
	}
	return 0
}

// PhysicalAttributes is the message describing the physical attributes of the robot.
type Robot_PhysicalAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The radius of the robot (in millimeters).
	Radius float32 `protobuf:"fixed32,1,opt,name=radius,proto3" json:"radius,omitempty"`
	// The height of the robot (in millimeters).
	Height float32 `protobuf:"fixed32,2,opt,name=height,proto3" json:"height,omitempty"`
	// The width of the dribbler (in millimeters).
	DribblerWidth float32 `protobuf:"fixed32,3,opt,name=dribbler_width,json=dribblerWidth,proto3" json:"dribbler_width,omitempty"`
}

func (x *Robot_PhysicalAttributes) Reset() {
	*x = Robot_PhysicalAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_vision_frame_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Robot_PhysicalAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Robot_PhysicalAttributes) ProtoMessage() {}

func (x *Robot_PhysicalAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_vision_frame_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Robot_PhysicalAttributes.ProtoReflect.Descriptor instead.
func (*Robot_PhysicalAttributes) Descriptor() ([]byte, []int) {
	return file_protocols_vision_frame_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Robot_PhysicalAttributes) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *Robot_PhysicalAttributes) GetHeight() float32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Robot_PhysicalAttributes) GetDribblerWidth() float32 {
	if x != nil {
		return x.DribblerWidth
	}
	return 0
}

var File_protocols_vision_frame_proto protoreflect.FileDescriptor

var file_protocols_vision_frame_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x67, 0x65, 0x6f, 0x6d, 0x65, 0x74, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xe0, 0x02, 0x0a, 0x05, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x42, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x76, 0x69,
	0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x2c, 0x0a, 0x05, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x76, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x6c, 0x6c, 0x52, 0x05, 0x62, 0x61, 0x6c, 0x6c, 0x73, 0x12,
	0x2f, 0x0a, 0x06, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x06, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x73,
	0x12, 0x32, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x88, 0x01, 0x01, 0x1a, 0x76, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x70,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x66, 0x70, 0x73, 0x42, 0x08, 0x0a, 0x06,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x04, 0x42, 0x61, 0x6c, 0x6c, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x36, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x33, 0x44, 0x66, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63,
	0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x33, 0x44, 0x66, 0x52, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x4a,
	0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x05, 0x10, 0x06, 0x52, 0x06, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x8a, 0x04, 0x0a, 0x05, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x72,
	0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x49, 0x64, 0x52, 0x07, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x36, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12,
	0x36, 0x0a, 0x08, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x32, 0x44, 0x66, 0x52, 0x08, 0x76,
	0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x6e, 0x67, 0x75, 0x6c,
	0x61, 0x72, 0x5f, 0x76, 0x65, 0x6c, 0x6f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0f, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x56, 0x65, 0x6c, 0x6f, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x5b, 0x0a, 0x13, 0x70, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x76, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x2e, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x12, 0x70, 0x68, 0x79,
	0x73, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x1a,
	0x6b, 0x0a, 0x12, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x65,
	0x72, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x64,
	0x72, 0x69, 0x62, 0x62, 0x6c, 0x65, 0x72, 0x57, 0x69, 0x64, 0x74, 0x68, 0x4a, 0x04, 0x08, 0x01,
	0x10, 0x02, 0x4a, 0x04, 0x08, 0x08, 0x10, 0x09, 0x4a, 0x04, 0x08, 0x0a, 0x10, 0x0b, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x22, 0xd1,
	0x02, 0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x70, 0x74,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x44, 0x65, 0x70,
	0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x67, 0x6f, 0x61, 0x6c, 0x57, 0x69, 0x64, 0x74,
	0x68, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x70,
	0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x41, 0x72, 0x65, 0x61, 0x44, 0x65, 0x70, 0x74, 0x68, 0x12,
	0x2c, 0x0a, 0x12, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x70, 0x65, 0x6e,
	0x61, 0x6c, 0x74, 0x79, 0x41, 0x72, 0x65, 0x61, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x25, 0x0a,
	0x0e, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x3c, 0x0a, 0x1b, 0x67, 0x6f, 0x61, 0x6c, 0x5f, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x5f, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x67, 0x6f, 0x61, 0x6c, 0x43,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x4d, 0x61,
	0x72, 0x6b, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x63, 0x69, 0x6e, 0x2f, 0x73, 0x73, 0x6c, 0x2d, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocols_vision_frame_proto_rawDescOnce sync.Once
	file_protocols_vision_frame_proto_rawDescData = file_protocols_vision_frame_proto_rawDesc
)

func file_protocols_vision_frame_proto_rawDescGZIP() []byte {
	file_protocols_vision_frame_proto_rawDescOnce.Do(func() {
		file_protocols_vision_frame_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocols_vision_frame_proto_rawDescData)
	})
	return file_protocols_vision_frame_proto_rawDescData
}

var file_protocols_vision_frame_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_protocols_vision_frame_proto_goTypes = []interface{}{
	(*Frame)(nil),                    // 0: protocols.vision.Frame
	(*Ball)(nil),                     // 1: protocols.vision.Ball
	(*Robot)(nil),                    // 2: protocols.vision.Robot
	(*Field)(nil),                    // 3: protocols.vision.Field
	(*Frame_Properties)(nil),         // 4: protocols.vision.Frame.Properties
	(*Robot_PhysicalAttributes)(nil), // 5: protocols.vision.Robot.PhysicalAttributes
	(*common.Point3Df)(nil),          // 6: protocols.common.Point3Df
	(*common.RobotId)(nil),           // 7: protocols.common.RobotId
	(*common.Point2Df)(nil),          // 8: protocols.common.Point2Df
	(*timestamppb.Timestamp)(nil),    // 9: google.protobuf.Timestamp
}
var file_protocols_vision_frame_proto_depIdxs = []int32{
	4,  // 0: protocols.vision.Frame.properties:type_name -> protocols.vision.Frame.Properties
	1,  // 1: protocols.vision.Frame.balls:type_name -> protocols.vision.Ball
	2,  // 2: protocols.vision.Frame.robots:type_name -> protocols.vision.Robot
	3,  // 3: protocols.vision.Frame.field:type_name -> protocols.vision.Field
	6,  // 4: protocols.vision.Ball.position:type_name -> protocols.common.Point3Df
	6,  // 5: protocols.vision.Ball.velocity:type_name -> protocols.common.Point3Df
	7,  // 6: protocols.vision.Robot.robot_id:type_name -> protocols.common.RobotId
	8,  // 7: protocols.vision.Robot.position:type_name -> protocols.common.Point2Df
	8,  // 8: protocols.vision.Robot.velocity:type_name -> protocols.common.Point2Df
	5,  // 9: protocols.vision.Robot.physical_attributes:type_name -> protocols.vision.Robot.PhysicalAttributes
	9,  // 10: protocols.vision.Frame.Properties.created_at:type_name -> google.protobuf.Timestamp
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_protocols_vision_frame_proto_init() }
func file_protocols_vision_frame_proto_init() {
	if File_protocols_vision_frame_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocols_vision_frame_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_vision_frame_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ball); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_vision_frame_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Robot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_vision_frame_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Field); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_vision_frame_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame_Properties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protocols_vision_frame_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Robot_PhysicalAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protocols_vision_frame_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocols_vision_frame_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocols_vision_frame_proto_goTypes,
		DependencyIndexes: file_protocols_vision_frame_proto_depIdxs,
		MessageInfos:      file_protocols_vision_frame_proto_msgTypes,
	}.Build()
	File_protocols_vision_frame_proto = out.File
	file_protocols_vision_frame_proto_rawDesc = nil
	file_protocols_vision_frame_proto_goTypes = nil
	file_protocols_vision_frame_proto_depIdxs = nil
}
