// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: protocols/third_party/simulation/erforce/custom_realism.proto

package erforce

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Realism configuration for ER-Force simulator
type RealismConfigErForce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Standard deviation of the gaussian noise applied to the ball position [m]
	StddevBallP *float32 `protobuf:"fixed32,1,opt,name=stddev_ball_p,json=stddevBallP" json:"stddev_ball_p,omitempty"`
	// Standard deviation of the gaussian noise applied to the robot position [m]
	StddevRobotP *float32 `protobuf:"fixed32,2,opt,name=stddev_robot_p,json=stddevRobotP" json:"stddev_robot_p,omitempty"`
	// Standard deviation of the gaussian noise applied to the robot angle [rad]
	StddevRobotPhi *float32 `protobuf:"fixed32,3,opt,name=stddev_robot_phi,json=stddevRobotPhi" json:"stddev_robot_phi,omitempty"`
	// Standard deviation of the gaussian noise applied to reported ball area
	// [pixel]
	StddevBallArea *float32 `protobuf:"fixed32,4,opt,name=stddev_ball_area,json=stddevBallArea" json:"stddev_ball_area,omitempty"`
	// Whether or not to simulate the ball being invisible when the view from the
	// camera to it is blocked by a robot. It also simulates the slight perceived
	// motion of the ball when it is partially overshadowed by a robot as the
	// visible center of the ball shifts
	EnableInvisibleBall *bool `protobuf:"varint,5,opt,name=enable_invisible_ball,json=enableInvisibleBall" json:"enable_invisible_ball,omitempty"`
	// The occlusion threshold at which the ball will no longer be visible [0-1]
	// A value of 0 would make the ball always visible
	BallVisibilityThreshold *float32 `protobuf:"fixed32,6,opt,name=ball_visibility_threshold,json=ballVisibilityThreshold" json:"ball_visibility_threshold,omitempty"`
	// The overlap of the visible range of the different cameras [m]
	CameraOverlap *float32 `protobuf:"fixed32,7,opt,name=camera_overlap,json=cameraOverlap" json:"camera_overlap,omitempty"`
	// With this probability, additional erroneous ball detections are added
	// at the edge of a robots dribbler (to emulate the red break beam lights
	// sometimes being visible from the camera). [detections/s/robot]
	DribblerBallDetections *float32 `protobuf:"fixed32,8,opt,name=dribbler_ball_detections,json=dribblerBallDetections" json:"dribbler_ball_detections,omitempty"`
	// How much the reported camera positions should deviate from the actual
	// camera positions used for ball projection etc. [m]
	CameraPositionError *float32 `protobuf:"fixed32,9,opt,name=camera_position_error,json=cameraPositionError" json:"camera_position_error,omitempty"`
	// The percentage of robot control commands that are "lost in transit" [0-1]
	RobotCommandLoss *float32 `protobuf:"fixed32,10,opt,name=robot_command_loss,json=robotCommandLoss" json:"robot_command_loss,omitempty"`
	// The percentage of robot reply messages that are "lost in transit" [0-1]
	RobotResponseLoss *float32 `protobuf:"fixed32,11,opt,name=robot_response_loss,json=robotResponseLoss" json:"robot_response_loss,omitempty"`
	// The percentage of times the ball is erroneously not "seen" by the camera
	// [0-1]
	MissingBallDetections *float32 `protobuf:"fixed32,12,opt,name=missing_ball_detections,json=missingBallDetections" json:"missing_ball_detections,omitempty"`
	// Sending out the vision data is delayed by this time after capturing the
	// positions [ns]
	VisionDelay *int64 `protobuf:"varint,13,opt,name=vision_delay,json=visionDelay" json:"vision_delay,omitempty"`
	// The difference between the reported t_capture and t_sent of the vision
	// frame [ns]
	VisionProcessingTime *int64 `protobuf:"varint,14,opt,name=vision_processing_time,json=visionProcessingTime" json:"vision_processing_time,omitempty"`
	// If false, 'glue' the ball during dribbling
	SimulateDribbling *bool `protobuf:"varint,15,opt,name=simulate_dribbling,json=simulateDribbling" json:"simulate_dribbling,omitempty"`
}

func (x *RealismConfigErForce) Reset() {
	*x = RealismConfigErForce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protocols_third_party_simulation_erforce_custom_realism_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RealismConfigErForce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealismConfigErForce) ProtoMessage() {}

func (x *RealismConfigErForce) ProtoReflect() protoreflect.Message {
	mi := &file_protocols_third_party_simulation_erforce_custom_realism_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealismConfigErForce.ProtoReflect.Descriptor instead.
func (*RealismConfigErForce) Descriptor() ([]byte, []int) {
	return file_protocols_third_party_simulation_erforce_custom_realism_proto_rawDescGZIP(), []int{0}
}

func (x *RealismConfigErForce) GetStddevBallP() float32 {
	if x != nil && x.StddevBallP != nil {
		return *x.StddevBallP
	}
	return 0
}

func (x *RealismConfigErForce) GetStddevRobotP() float32 {
	if x != nil && x.StddevRobotP != nil {
		return *x.StddevRobotP
	}
	return 0
}

func (x *RealismConfigErForce) GetStddevRobotPhi() float32 {
	if x != nil && x.StddevRobotPhi != nil {
		return *x.StddevRobotPhi
	}
	return 0
}

func (x *RealismConfigErForce) GetStddevBallArea() float32 {
	if x != nil && x.StddevBallArea != nil {
		return *x.StddevBallArea
	}
	return 0
}

func (x *RealismConfigErForce) GetEnableInvisibleBall() bool {
	if x != nil && x.EnableInvisibleBall != nil {
		return *x.EnableInvisibleBall
	}
	return false
}

func (x *RealismConfigErForce) GetBallVisibilityThreshold() float32 {
	if x != nil && x.BallVisibilityThreshold != nil {
		return *x.BallVisibilityThreshold
	}
	return 0
}

func (x *RealismConfigErForce) GetCameraOverlap() float32 {
	if x != nil && x.CameraOverlap != nil {
		return *x.CameraOverlap
	}
	return 0
}

func (x *RealismConfigErForce) GetDribblerBallDetections() float32 {
	if x != nil && x.DribblerBallDetections != nil {
		return *x.DribblerBallDetections
	}
	return 0
}

func (x *RealismConfigErForce) GetCameraPositionError() float32 {
	if x != nil && x.CameraPositionError != nil {
		return *x.CameraPositionError
	}
	return 0
}

func (x *RealismConfigErForce) GetRobotCommandLoss() float32 {
	if x != nil && x.RobotCommandLoss != nil {
		return *x.RobotCommandLoss
	}
	return 0
}

func (x *RealismConfigErForce) GetRobotResponseLoss() float32 {
	if x != nil && x.RobotResponseLoss != nil {
		return *x.RobotResponseLoss
	}
	return 0
}

func (x *RealismConfigErForce) GetMissingBallDetections() float32 {
	if x != nil && x.MissingBallDetections != nil {
		return *x.MissingBallDetections
	}
	return 0
}

func (x *RealismConfigErForce) GetVisionDelay() int64 {
	if x != nil && x.VisionDelay != nil {
		return *x.VisionDelay
	}
	return 0
}

func (x *RealismConfigErForce) GetVisionProcessingTime() int64 {
	if x != nil && x.VisionProcessingTime != nil {
		return *x.VisionProcessingTime
	}
	return 0
}

func (x *RealismConfigErForce) GetSimulateDribbling() bool {
	if x != nil && x.SimulateDribbling != nil {
		return *x.SimulateDribbling
	}
	return false
}

var File_protocols_third_party_simulation_erforce_custom_realism_proto protoreflect.FileDescriptor

var file_protocols_third_party_simulation_erforce_custom_realism_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x28, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2e, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0xd7, 0x05, 0x0a, 0x14, 0x52, 0x65,
	0x61, 0x6c, 0x69, 0x73, 0x6d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x72, 0x46, 0x6f, 0x72,
	0x63, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x74, 0x64, 0x64, 0x65, 0x76, 0x5f, 0x62, 0x61, 0x6c,
	0x6c, 0x5f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x73, 0x74, 0x64, 0x64, 0x65,
	0x76, 0x42, 0x61, 0x6c, 0x6c, 0x50, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x74, 0x64, 0x64, 0x65, 0x76,
	0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c,
	0x73, 0x74, 0x64, 0x64, 0x65, 0x76, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x50, 0x12, 0x28, 0x0a, 0x10,
	0x73, 0x74, 0x64, 0x64, 0x65, 0x76, 0x5f, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x70, 0x68, 0x69,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x73, 0x74, 0x64, 0x64, 0x65, 0x76, 0x52, 0x6f,
	0x62, 0x6f, 0x74, 0x50, 0x68, 0x69, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x74, 0x64, 0x64, 0x65, 0x76,
	0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x73, 0x74, 0x64, 0x64, 0x65, 0x76, 0x42, 0x61, 0x6c, 0x6c, 0x41, 0x72, 0x65, 0x61,
	0x12, 0x32, 0x0a, 0x15, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x13, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x42, 0x61, 0x6c, 0x6c, 0x12, 0x3a, 0x0a, 0x19, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x17, 0x62, 0x61, 0x6c, 0x6c, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x6c,
	0x61, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61,
	0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x70, 0x12, 0x38, 0x0a, 0x18, 0x64, 0x72, 0x69, 0x62, 0x62,
	0x6c, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x16, 0x64, 0x72, 0x69, 0x62, 0x62,
	0x6c, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x13, 0x63, 0x61, 0x6d, 0x65, 0x72, 0x61, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x10, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x4c,
	0x6f, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x6c, 0x6f, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x11, 0x72, 0x6f, 0x62, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c,
	0x6f, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x62,
	0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c,
	0x6c, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x76,
	0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x34,
	0x0a, 0x16, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14,
	0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x72, 0x69, 0x62, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x72, 0x69, 0x62, 0x62, 0x6c,
	0x69, 0x6e, 0x67, 0x42, 0x50, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x72, 0x6f, 0x62, 0x6f, 0x63, 0x69, 0x6e, 0x2f, 0x73, 0x73, 0x6c, 0x2d, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x2f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x65, 0x72,
	0x66, 0x6f, 0x72, 0x63, 0x65,
}

var (
	file_protocols_third_party_simulation_erforce_custom_realism_proto_rawDescOnce sync.Once
	file_protocols_third_party_simulation_erforce_custom_realism_proto_rawDescData = file_protocols_third_party_simulation_erforce_custom_realism_proto_rawDesc
)

func file_protocols_third_party_simulation_erforce_custom_realism_proto_rawDescGZIP() []byte {
	file_protocols_third_party_simulation_erforce_custom_realism_proto_rawDescOnce.Do(func() {
		file_protocols_third_party_simulation_erforce_custom_realism_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocols_third_party_simulation_erforce_custom_realism_proto_rawDescData)
	})
	return file_protocols_third_party_simulation_erforce_custom_realism_proto_rawDescData
}

var file_protocols_third_party_simulation_erforce_custom_realism_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_protocols_third_party_simulation_erforce_custom_realism_proto_goTypes = []interface{}{
	(*RealismConfigErForce)(nil), // 0: protocols.third_party.simulation.erforce.RealismConfigErForce
}
var file_protocols_third_party_simulation_erforce_custom_realism_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_protocols_third_party_simulation_erforce_custom_realism_proto_init() }
func file_protocols_third_party_simulation_erforce_custom_realism_proto_init() {
	if File_protocols_third_party_simulation_erforce_custom_realism_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protocols_third_party_simulation_erforce_custom_realism_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RealismConfigErForce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocols_third_party_simulation_erforce_custom_realism_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protocols_third_party_simulation_erforce_custom_realism_proto_goTypes,
		DependencyIndexes: file_protocols_third_party_simulation_erforce_custom_realism_proto_depIdxs,
		MessageInfos:      file_protocols_third_party_simulation_erforce_custom_realism_proto_msgTypes,
	}.Build()
	File_protocols_third_party_simulation_erforce_custom_realism_proto = out.File
	file_protocols_third_party_simulation_erforce_custom_realism_proto_rawDesc = nil
	file_protocols_third_party_simulation_erforce_custom_realism_proto_goTypes = nil
	file_protocols_third_party_simulation_erforce_custom_realism_proto_depIdxs = nil
}
