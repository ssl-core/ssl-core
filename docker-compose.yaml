version: "3"
services:
  mongodb1:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    container_name: mongodb1
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongodb1_data:/data/db"
      - "mongodb1_config:/data/configdb"

  mongodb2:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
    ports:
      - 27018:27018
    container_name: mongodb2
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "mongodb2_data:/data/db"
      - "mongodb2_config:/data/configdb"

  mongodb3:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
    ports:
      - 27019:27019
    container_name: mongodb3
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "mongodb3_data:/data/db"
      - "mongodb3_config:/data/configdb"

  simulator:
    image: roboticserlangen/simulatorcli:commit-6a4e1c06533b
    restart: unless-stopped
    container_name: simulator
    environment:
      GEOMETRY: "2020"
      REALISM: "RC2021"
  mongodb1:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    ports:
      - 27017:27017
    container_name: mongodb1
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'host.docker.internal:27017',priority:1},{_id:1,host:'host.docker.internal:27018',priority:0.5},{_id:2,host:'host.docker.internal:27019',priority:0.5}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    volumes:
      - "mongodb1_data:/data/db"
      - "mongodb1_config:/data/configdb"

  mongodb2:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27018"]
    ports:
      - 27018:27018
    container_name: mongodb2
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "mongodb2_data:/data/db"
      - "mongodb2_config:/data/configdb"

  mongodb3:
    image: mongo:7.0
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27019"]
    ports:
      - 27019:27019
    container_name: mongodb3
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "mongodb3_data:/data/db"
      - "mongodb3_config:/data/configdb"

  # simulator:
  #   image: roboticserlangen/simulatorcli:commit-6a4e1c06533b
  #   restart: unless-stopped
  #   container_name: simulator
  #   environment:
  #     GEOMETRY: "2020"
  #     REALISM: "RC2021"

  gateway:
    build:
      context: .
      dockerfile: gateway/gateway-augusto/.devcontainer/Dockerfile
      args:
        - SOURCE_DIRECTORY=gateway/gateway-augusto
    working_dir: /workspaces/gateway/gateway-augusto
    container_name: gateway
    command: ["bin/gateway_main"]
    ports:
      - 50051:50051
    volumes:
      - /tmp:/tmp
      - ./:/app
    # depends_on:
    #   - simulator

  vision:
    build:
      context: .
      dockerfile: vision-be/vision-panettone/.devcontainer/Dockerfile
      args:
        - SOURCE_DIRECTORY=vision-be/vision-panettone
    working_dir: /workspaces/vision-be/vision-panettone
    container_name: vision
    command: ["bin/vision_main"]
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - /tmp:/tmp
    depends_on:
      - mongodb1

  match-bff:
    build:
      context: .
      dockerfile: match-bff/Dockerfile
      args:
        - SOURCE_DIRECTORY=match-bff
    command: ["bin/match-bff"]
    ports:
      - 4040:4040
    depends_on:
      - gateway
      - vision
  # match-bff:
  #   build:
  #     context: .
  #     dockerfile: match-bff/Dockerfile
  #     args:
  #       - SOURCE_DIRECTORY=match-bff
  #   command: ["./match-bff"]
  #   ports:
  #     - 4040:4040
  #   depends_on:
  #     - gateway
  #     - vision

  match-mfe:
    build:
      context: .
      dockerfile: match-mfe/Dockerfile
      args:
        - SOURCE_DIRECTORY=match-mfe
    command: ["yarn", "run", "preview"]
    ports:
      - 3031:3031
    depends_on:
      - match-bff
  # match-mfe:
  #   build:
  #     context: .
  #     dockerfile: match-mfe/Dockerfile
  #     args:
  #       - SOURCE_DIRECTORY=match-mfe
  #   command: ["-g", "daemon off;"]
  #   ports:
  #     - 3031:3031
  #   depends_on:
  #     - match-bff

volumes:
  mongodb1_data:
  mongodb2_data:
  mongodb3_data:
  mongodb1_config:
  mongodb2_config:
  mongodb3_config: