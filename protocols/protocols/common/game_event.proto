syntax = "proto3";

package protocols.common;

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "protocols/common/geometry.proto";
import "protocols/common/robot_id.proto";
import "protocols/common/team.proto";

message GameEvent {
  repeated string sources = 1;
  google.protobuf.Timestamp timestamp = 2;

  oneof event {
    BallLeftField ball_left_field_touch_line = 3;
    BallLeftField ball_left_field_goal_line = 4;
    BallLeftFieldBoundary ball_left_field_boundary = 5;
    AimlessKick aimless_kick = 6;

    GoalkeeperHeldBall goalkeeper_held_ball = 7;
    RobotTooCloseToDefenseArea robot_too_close_to_defense_area = 8;
    RobotInDefenseArea robot_in_defense_area = 9;
    RobotPushedRobot robot_pushed_robot = 10;
    RobotHeldBallDeliberately robot_held_ball_deliberately = 11;
    RobotDribbledBallTooFar robot_dribbled_ball_too_far = 12;
    RobotTippedOver robot_tipped_over = 13;
    RobotTouchedBallInDefenseArea robot_touched_ball_in_defense_area = 14;
    RobotKickedBallTooFast robot_kicked_ball_too_fast = 15;
    RobotCrashUnique robot_crash_unique = 16;
    RobotCrashDrawn robot_crash_drawn = 17;
    RobotTooFastInStop robot_too_fast_in_stop = 18;
    RobotTooCloseToKickPoint robot_too_close_to_kick_point = 19;
    RobotInterferedBallPlacement robot_interfered_ball_placement = 20;
    RobotDoubleTouchedBall robot_double_touched_ball = 21;

    NoProgressInGame no_progress_in_game = 22;
    MultipleCards multiple_cards = 23;
    MultipleFouls multiple_fouls = 24;
    TooManyRobots too_many_robots = 25;

    BallPlacementSucceeded ball_placement_succeeded = 26;
    BallPlacementFailed ball_placement_failed = 27;

    PenaltyKickFailed penalty_kick_failed = 28;

    Goal possible_goal = 29;
    Goal goal = 30;
    Goal invalid_goal = 31;

    RobotSubstitution robot_substitution = 32;
    ChallengeFlag challenge_flag = 33;
    EmergencyStop emergency_stop = 34;

    UnsportingBehaviorMinor unsporting_behavior_minor = 35;
    UnsportingBehaviorMajor unsporting_behavior_major = 36;
  }

  message BallLeftField {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df left_field_position = 3;
  }

  message BallLeftFieldBoundary {
    Team by_team = 1;
    Point2Df left_field_boundary_position = 2;
  }

  message AimlessKick {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df left_field_position = 3;
    Point2Df kick_position = 4;
  }

  message GoalkeeperHeldBall {
    Team by_team = 1;
    Point2Df ball_position = 2;
    google.protobuf.Duration duration = 3;
  }

  message RobotTooCloseToDefenseArea {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df robot_position = 3;
    float distance_to_defense_area = 4;
    Point2Df ball_position = 5;
  }

  message RobotInDefenseArea {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df robot_position = 3;
    float distance_to_nearest_point_outside_area = 4;
  }

  message RobotPushedRobot {
    Team by_team = 1;
    RobotId violator_robot = 2;
    RobotId victim_robot = 3;
    Point2Df position = 4;
    float pushed_distance = 5;
  }

  message RobotHeldBallDeliberately {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df ball_position = 3;
    google.protobuf.Duration duration = 4;
  }

  message RobotDribbledBallTooFar {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df start_position = 3;
    Point2Df end_position = 4;
  }

  message RobotTippedOver {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df robot_position = 3;
    Point2Df ball_position = 4;
  }

  message RobotTouchedBallInDefenseArea {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df robot_position = 3;
    float distance_to_nearest_point_outside_area = 4;
  }

  message RobotKickedBallTooFast {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df ball_at_highest_speed_position = 3;
    float initial_ball_speed = 4;
    bool was_chipped_kick = 5;
  }

  message RobotCrashUnique {
    Team by_team = 1;
    RobotId violator_robot = 2;
    RobotId victim_robot = 3;
    Point2Df crash_position = 4;
    float crash_speed = 5;
    float speed_difference = 6;
    float crash_angle = 7;
  }

  message RobotCrashDrawn {
    RobotId home_robot_id = 1;
    RobotId away_robot_id = 2;
    Point2Df crash_position = 3;
    float crash_speed = 4;
    float speed_difference = 5;
    float crash_angle = 6;
  }

  message RobotTooFastInStop {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df robot_position = 3;
    float robot_speed = 4;
  }

  message RobotTooCloseToKickPoint {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df robot_position = 3;
    float robot_distance = 4;
  }

  message RobotInterferedBallPlacement {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df robot_position = 3;
  }

  message RobotDoubleTouchedBall {
    Team by_team = 1;
    RobotId by_robot = 2;
    Point2Df ball_position = 3;
  }

  message NoProgressInGame {
    Point2Df ball_position = 1;
    google.protobuf.Duration duration = 2;
  }

  message MultipleCards {
    Team by_team = 1;
  }

  message MultipleFouls {
    Team by_team = 1;
  }

  message TooManyRobots {
    Team by_team = 1;
    uint32 num_robots_allowed = 2;
    uint32 num_robots_on_field = 3;
    Point2Df ball_position = 4;
  }

  message BallPlacementSucceeded {
    Team by_team = 1;
    google.protobuf.Duration duration = 2;
    float distance_to_placement_target = 3;
    float distance_from_start_position = 4;
  }

  message BallPlacementFailed {
    Team by_team = 1;
    float remaining_distance = 2;
  }

  message PenaltyKickFailed {
    Team by_team = 1;
    Point2Df ball_position = 2;
  }

  message Goal {
    Team by_team = 1;
    Team kicking_team = 2;
    RobotId kicking_robot = 3;
    Point2Df ball_position_when_scored = 4;
    Point2Df kick_position = 5;
    float max_ball_height = 6;
    uint32 num_of_robots_of_scoring_team = 7;
    google.protobuf.Timestamp last_touch_by_scoring_team_timestamp = 8;

    optional string message = 9;
  }

  message RobotSubstitution {
    Team by_team = 1;
  }

  message ChallengeFlag {
    Team by_team = 1;
  }

  message EmergencyStop {
    Team by_team = 1;
  }

  message UnsportingBehaviorMinor {
    Team by_team = 1;
    string reason = 2;
  }

  message UnsportingBehaviorMajor {
    Team by_team = 1;
    string reason = 2;
  }
}
